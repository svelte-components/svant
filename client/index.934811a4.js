import{S as e,i as n,s as t,x as o,e as a,t as s,a as i,C as c,b as r,f as l,g,d,c as p,D as f,j as m,k as h,E as u,a4 as T,a5 as $,v as b,w as v,G as C,h as y,q as k,n as E}from"./client.5f168ae3.js";import{E as w,D as x}from"./DocsTable.58b7e2da.js";import"./index.73c3d806.js";import O from"./basic.demo.c823ab35.js";import D from"./color.demo.3b8f1688.js";import S from"./icon.demo.ca629a2a.js";import I from"./status.demo.b4a3e094.js";import P from"./add-remove.demo.80fbf8a5.js";import j from"./visibility.demo.07c220e2.js";import B from"./checkable.demo.58234f20.js";function V(e){let n,t,o,i,c;return{c(){n=a("p"),t=s("Basic Tag usage. Set the closable to allow it to be closed. It also supports an "),o=a("code"),i=s("on:close"),c=s(" event."),this.h()},l(e){n=r(e,"P",{slot:!0});var a=l(n);t=g(a,"Basic Tag usage. Set the closable to allow it to be closed. It also supports an "),o=r(a,"CODE",{});var s=l(o);i=g(s,"on:close"),s.forEach(d),c=g(a," event."),a.forEach(d),this.h()},h(){y(n,"slot","description")},m(e,a){m(e,n,a),h(n,t),h(n,o),h(o,i),h(n,c)},d(e){e&&d(n)}}}function M(e){let n,t;return{c(){n=a("p"),t=s("The Tag has a set of predefined colors. The color can also be set to a custom hex color string."),this.h()},l(e){n=r(e,"P",{slot:!0});var o=l(n);t=g(o,"The Tag has a set of predefined colors. The color can also be set to a custom hex color string."),o.forEach(d),this.h()},h(){y(n,"slot","description")},m(e,o){m(e,n,o),h(n,t)},d(e){e&&d(n)}}}function A(e){let n,t,o,i,c,p,f,u,T,$,b,v,C,k,E,w;return{c(){n=a("p"),t=a("code"),o=s("Tag"),i=s(" components can contain an "),c=a("code"),p=s("Icon"),f=s(". This is done by setting the "),u=a("code"),T=s("icon"),$=s(" property or placing an "),b=a("code"),v=s("Icon"),C=s(" component within the "),k=a("code"),E=s("Tag"),w=s("."),this.h()},l(e){n=r(e,"P",{slot:!0});var a=l(n);t=r(a,"CODE",{});var s=l(t);o=g(s,"Tag"),s.forEach(d),i=g(a," components can contain an "),c=r(a,"CODE",{});var m=l(c);p=g(m,"Icon"),m.forEach(d),f=g(a,". This is done by setting the "),u=r(a,"CODE",{});var h=l(u);T=g(h,"icon"),h.forEach(d),$=g(a," property or placing an "),b=r(a,"CODE",{});var y=l(b);v=g(y,"Icon"),y.forEach(d),C=g(a," component within the "),k=r(a,"CODE",{});var x=l(k);E=g(x,"Tag"),x.forEach(d),w=g(a,"."),a.forEach(d),this.h()},h(){y(n,"slot","description")},m(e,a){m(e,n,a),h(n,t),h(t,o),h(n,i),h(n,c),h(c,p),h(n,f),h(n,u),h(u,T),h(n,$),h(n,b),h(b,v),h(n,C),h(n,k),h(k,E),h(n,w)},d(e){e&&d(n)}}}function L(e){let n,t,o,i,c,p,f,u,T,$,b,v,C,k,E,w,x,O,D,S;return{c(){n=a("p"),t=s("There are five different preset colors that can be used to communicate status. The following can be set using the "),o=a("code"),i=s("color"),c=s(" property. "),p=a("code"),f=s("success"),u=s(", "),T=a("code"),$=s("processing"),b=s(", "),v=a("code"),C=s("error"),k=s(", "),E=a("code"),w=s("default"),x=s(", and "),O=a("code"),D=s("warning"),S=s("."),this.h()},l(e){n=r(e,"P",{slot:!0});var a=l(n);t=g(a,"There are five different preset colors that can be used to communicate status. The following can be set using the "),o=r(a,"CODE",{});var s=l(o);i=g(s,"color"),s.forEach(d),c=g(a," property. "),p=r(a,"CODE",{});var m=l(p);f=g(m,"success"),m.forEach(d),u=g(a,", "),T=r(a,"CODE",{});var h=l(T);$=g(h,"processing"),h.forEach(d),b=g(a,", "),v=r(a,"CODE",{});var y=l(v);C=g(y,"error"),y.forEach(d),k=g(a,", "),E=r(a,"CODE",{});var I=l(E);w=g(I,"default"),I.forEach(d),x=g(a,", and "),O=r(a,"CODE",{});var P=l(O);D=g(P,"warning"),P.forEach(d),S=g(a,"."),a.forEach(d),this.h()},h(){y(n,"slot","description")},m(e,a){m(e,n,a),h(n,t),h(n,o),h(o,i),h(n,c),h(n,p),h(p,f),h(n,u),h(n,T),h(T,$),h(n,b),h(n,v),h(v,C),h(n,k),h(n,E),h(E,w),h(n,x),h(n,O),h(O,D),h(n,S)},d(e){e&&d(n)}}}function W(e){let n,t,o,i,c;return{c(){n=a("p"),t=s("The visibility can be controlled using the "),o=a("code"),i=s("visible"),c=s(" prop."),this.h()},l(e){n=r(e,"P",{slot:!0});var a=l(n);t=g(a,"The visibility can be controlled using the "),o=r(a,"CODE",{});var s=l(o);i=g(s,"visible"),s.forEach(d),c=g(a," prop."),a.forEach(d),this.h()},h(){y(n,"slot","description")},m(e,a){m(e,n,a),h(n,t),h(n,o),h(o,i),h(n,c)},d(e){e&&d(n)}}}function F(e){let n,t,o,i,c,p,f,u;return{c(){n=a("p"),t=s("Use the "),o=a("code"),i=s("checked"),c=s(" prop to make the "),p=a("code"),f=s("Tag"),u=s(" work like a checkbox. Click a tag to toggle its checked state."),this.h()},l(e){n=r(e,"P",{slot:!0});var a=l(n);t=g(a,"Use the "),o=r(a,"CODE",{});var s=l(o);i=g(s,"checked"),s.forEach(d),c=g(a," prop to make the "),p=r(a,"CODE",{});var m=l(p);f=g(m,"Tag"),m.forEach(d),u=g(a," work like a checkbox. Click a tag to toggle its checked state."),a.forEach(d),this.h()},h(){y(n,"slot","description")},m(e,a){m(e,n,a),h(n,t),h(n,o),h(o,i),h(n,c),h(n,p),h(p,f),h(n,u)},d(e){e&&d(n)}}}function H(e){let n,t,y,k,E,H,Y,q,N,U,z,G,R,J,K,Q,X,Z,_,ee,ne;const te=new w({props:{id:"tag-demo-basic",title:"Basic",demoComponent:O,demoCode:'<Tag>Tag 1</Tag>\n<Tag>\n  <a href="https://svant.dev">Link</a>\n</Tag>\n<Tag closable on:close="{tag2Message}">Tag 2</Tag>\n<Tag closable on:close="{tag3Message}">Prevent Close</Tag>\n\n<script>\n  import { Tag, message } from "svant";\n\n  function tag2Message() {\n    message.info("Tag 2 closed");\n  }\n\n  function tag3Message(e) {\n    e.detail.preventClose();\n    message.info("Tag 3 clicked but close was prevented");\n  }\n<\/script>\n',$$slots:{description:[V]},$$scope:{ctx:e}}}),oe=new w({props:{id:"tag-demo-color",title:"Colors",demoComponent:D,demoCode:'<h4 style="{{ marginBottom: 16 }}">Presets:</h4>\n<div>\n  <Tag color="magenta">magenta</Tag>\n  <Tag color="red">red</Tag>\n  <Tag color="volcano">volcano</Tag>\n  <Tag color="orange">orange</Tag>\n  <Tag color="gold">gold</Tag>\n  <Tag color="lime">lime</Tag>\n  <Tag color="green">green</Tag>\n  <Tag color="cyan">cyan</Tag>\n  <Tag color="blue">blue</Tag>\n  <Tag color="geekblue">geekblue</Tag>\n  <Tag color="purple">purple</Tag>\n</div>\n<h4 style="{{ margin: \'16px 0\' }}">Custom:</h4>\n<div>\n  <Tag color="#f50">#f50</Tag>\n  <Tag color="#2db7f5">#2db7f5</Tag>\n  <Tag color="#87d068">#87d068</Tag>\n  <Tag color="#108ee9">#108ee9</Tag>\n</div>\n\n<script>\n  import { Tag } from "svant";\n<\/script>\n',$$slots:{description:[M]},$$scope:{ctx:e}}}),ae=new w({props:{id:"tag-demo-icon",title:"Icon",demoComponent:S,demoCode:'<Tag icon="{TwitterOutlined}" color="#55acee">Twitter</Tag>\n<Tag icon="{YoutubeOutlined}" color="#cd201f">Youtube</Tag>\n<Tag icon="{FacebookOutlined}" color="#3b5999">Facebook</Tag>\n<Tag color="#55acee">\n  <LinkedinOutlined />\n  <span class="linkedin-text">LinkedIn</span>\n</Tag>\n\n<script>\n  import { Tag } from "svant";\n  import {\n    TwitterOutlined,\n    YoutubeOutlined,\n    FacebookOutlined,\n    LinkedinOutlined\n  } from "svant/icons";\n<\/script>\n\n<style>\n  .linkedin-text {\n    margin-left: 3px;\n  }\n</style>\n',$$slots:{description:[A]},$$scope:{ctx:e}}}),se=new w({props:{id:"tag-demo-status",title:"Status",demoComponent:I,demoCode:'<div>\n  <h4>Without icon</h4>\n  <Tag color="success">success</Tag>\n  <Tag color="processing">processing</Tag>\n  <Tag color="error">error</Tag>\n  <Tag color="warning">warning</Tag>\n  <Tag color="default">default</Tag>\n</div>\n\n<div>\n  <h4>With icon</h4>\n  <Tag icon="{CheckCircleOutlined}" color="success">success</Tag>\n  <Tag color="processing">\n    <SyncOutlined spin />\n    <span class="procesing-text">processing</span>\n  </Tag>\n  <Tag icon="{CloseCircleOutlined}" color="error">error</Tag>\n  <Tag icon="{ExclamationCircleOutlined}" color="warning">warning</Tag>\n  <Tag icon="{ClockCircleOutlined}" color="default">waiting</Tag>\n  <Tag icon="{MinusCircleOutlined}" color="default">stop</Tag>\n</div>\n\n<script>\n  import { Tag } from "svant";\n  import {\n    CheckCircleOutlined,\n    SyncOutlined,\n    CloseCircleOutlined,\n    ExclamationCircleOutlined,\n    ClockCircleOutlined,\n    MinusCircleOutlined\n  } from "svant/icons";\n<\/script>\n\n<style>\n  .procesing-text {\n    margin-left: 3px;\n  }\n</style>\n',$$slots:{description:[L]},$$scope:{ctx:e}}}),ie=new w({props:{id:"tag-demo-add-remove",title:"Add & Remove Dynamically",demoComponent:P,demoCode:'{#each tags as tag, index (tag.id)}\n  <Tag closable on:close="{() => removeTag(tag.id)}">{tag.label}</Tag>\n{/each}\n\n{#if !inputVisible}\n  <Tag\n    class="demo-site-add-tag"\n    disableTransition="{true}"\n    on:click="{onClickAddTag}">\n    <PlusOutlined />\n    New Tag\n  </Tag>\n{:else}\n  <Input\n    bind:value="{newTagValue}"\n    class="demo-site-add-tag-input"\n    on:enter="{addTag}" />\n{/if}\n\n<script>\n  import { Tag, Input } from "svant";\n  import { PlusOutlined } from "svant/icons";\n  import { tick } from "svelte";\n\n  let tags = [\n    { label: "Tag one", id: 1 },\n    { label: "Tag two", id: 2 }\n  ];\n  let inputVisible = false;\n  let newTagValue = "";\n\n  const addTag = () => {\n    inputVisible = false;\n    tags[tags.length] = { label: newTagValue, id: tags.length + 1 };\n    newTagValue = "";\n  };\n\n  const removeTag = tag => {\n    tags = tags.filter(t => t.id !== tag.id);\n  };\n\n  const onClickAddTag = async () => {\n    inputVisible = true;\n    await tick();\n    document.querySelector(".ant-input").focus();\n  };\n<\/script>\n\n<style>\n  :global(.demo-site-add-tag) {\n    background: #fff;\n    border-style: dashed;\n    cursor: pointer;\n  }\n\n  :global(.demo-site-add-tag-input) {\n    display: inline-block;\n    width: 78px;\n    height: 23px;\n    vertical-align: middle;\n  }\n</style>\n'}}),ce=new w({props:{id:"tag-demo-visibility",title:"Controlled Visibility",demoComponent:j,demoCode:'<Tag {visible} closable on:close="{onClose}">Movies</Tag>\n\n<div style="margin-top: 15px;">\n  <Button size="small" on:click="{toggleVisibility}">Toggle</Button>\n</div>\n\n<script>\n  import { Tag, Button } from "svant";\n\n  let visible = true;\n\n  const toggleVisibility = () => {\n    visible = !visible;\n  };\n\n  const onClose = () => {\n    visible = false;\n  };\n<\/script>\n',$$slots:{description:[W]},$$scope:{ctx:e}}}),re=new w({props:{id:"tag-demo-checkable",title:"Checkable",demoComponent:B,demoCode:'<span style="margin-right: 8px;">Categories:</span>\n{#each tags as tag (tag.label)}\n  <Tag\n    checked="{tag.selected}"\n    on:click="{() => {\n      toggleSelected(tag.label);\n    }}">\n    {tag.label}\n  </Tag>\n{/each}\n\n<script>\n  import { Tag } from "svant";\n\n  let tags = [\n    {\n      label: "Movies",\n      selected: false\n    },\n    {\n      label: "Books",\n      selected: true\n    },\n    {\n      label: "Music",\n      selected: false\n    },\n    {\n      label: "Sports",\n      selected: false\n    }\n  ];\n\n  const toggleSelected = label => {\n    const tagsCopy = [...tags];\n    const tag = tagsCopy.find(t => t.label === label);\n    tag.selected = !tag.selected;\n    tags = [...tagsCopy];\n  };\n<\/script>\n',$$slots:{description:[F]},$$scope:{ctx:e}}}),le=[e[0]];let ge={};for(let e=0;e<le.length;e+=1)ge=o(ge,le[e]);const de=new x({props:ge}),pe=[e[1]];let fe={};for(let e=0;e<pe.length;e+=1)fe=o(fe,pe[e]);const me=new x({props:fe});return{c(){n=a("h1"),t=s("Tag"),y=i(),k=a("p"),E=s("Description of the Tag's function."),H=i(),Y=a("h2"),q=s("Examples"),N=i(),c(te.$$.fragment),U=i(),c(oe.$$.fragment),z=i(),c(ae.$$.fragment),G=i(),c(se.$$.fragment),R=i(),c(ie.$$.fragment),J=i(),c(ce.$$.fragment),K=i(),c(re.$$.fragment),Q=i(),X=a("h2"),Z=s("API"),_=i(),c(de.$$.fragment),ee=i(),c(me.$$.fragment)},l(e){n=r(e,"H1",{});var o=l(n);t=g(o,"Tag"),o.forEach(d),y=p(e),k=r(e,"P",{});var a=l(k);E=g(a,"Description of the Tag's function."),a.forEach(d),H=p(e),Y=r(e,"H2",{});var s=l(Y);q=g(s,"Examples"),s.forEach(d),N=p(e),f(te.$$.fragment,e),U=p(e),f(oe.$$.fragment,e),z=p(e),f(ae.$$.fragment,e),G=p(e),f(se.$$.fragment,e),R=p(e),f(ie.$$.fragment,e),J=p(e),f(ce.$$.fragment,e),K=p(e),f(re.$$.fragment,e),Q=p(e),X=r(e,"H2",{});var i=l(X);Z=g(i,"API"),i.forEach(d),_=p(e),f(de.$$.fragment,e),ee=p(e),f(me.$$.fragment,e)},m(e,o){m(e,n,o),h(n,t),m(e,y,o),m(e,k,o),h(k,E),m(e,H,o),m(e,Y,o),h(Y,q),m(e,N,o),u(te,e,o),m(e,U,o),u(oe,e,o),m(e,z,o),u(ae,e,o),m(e,G,o),u(se,e,o),m(e,R,o),u(ie,e,o),m(e,J,o),u(ce,e,o),m(e,K,o),u(re,e,o),m(e,Q,o),m(e,X,o),h(X,Z),m(e,_,o),u(de,e,o),m(e,ee,o),u(me,e,o),ne=!0},p(e,[n]){const t={};4&n&&(t.$$scope={dirty:n,ctx:e}),te.$set(t);const o={};4&n&&(o.$$scope={dirty:n,ctx:e}),oe.$set(o);const a={};4&n&&(a.$$scope={dirty:n,ctx:e}),ae.$set(a);const s={};4&n&&(s.$$scope={dirty:n,ctx:e}),se.$set(s);const i={};4&n&&(i.$$scope={dirty:n,ctx:e}),ce.$set(i);const c={};4&n&&(c.$$scope={dirty:n,ctx:e}),re.$set(c);const r=1&n?T(le,[$(e[0])]):{};de.$set(r);const l=2&n?T(pe,[$(e[1])]):{};me.$set(l)},i(e){ne||(b(te.$$.fragment,e),b(oe.$$.fragment,e),b(ae.$$.fragment,e),b(se.$$.fragment,e),b(ie.$$.fragment,e),b(ce.$$.fragment,e),b(re.$$.fragment,e),b(de.$$.fragment,e),b(me.$$.fragment,e),ne=!0)},o(e){v(te.$$.fragment,e),v(oe.$$.fragment,e),v(ae.$$.fragment,e),v(se.$$.fragment,e),v(ie.$$.fragment,e),v(ce.$$.fragment,e),v(re.$$.fragment,e),v(de.$$.fragment,e),v(me.$$.fragment,e),ne=!1},d(e){e&&d(n),e&&d(y),e&&d(k),e&&d(H),e&&d(Y),e&&d(N),C(te,e),e&&d(U),C(oe,e),e&&d(z),C(ae,e),e&&d(G),C(se,e),e&&d(R),C(ie,e),e&&d(J),C(ce,e),e&&d(K),C(re,e),e&&d(Q),e&&d(X),e&&d(_),C(de,e),e&&d(ee),C(me,e)}}}function Y(e){return[{title:"Attributes",columns:["Property","Description","Type","Default"],data:[{property:"closable",description:"Whether the Tag can be closed",type:"Boolean",default:"false"},{property:"visible",description:"Whether the Tag is closed or not",type:"Boolean",default:"false"},{property:"color",description:"Color of the tag. See examples above in the `Color` and `Status` sections for details",type:"String",default:""},{property:"class",description:"Class name or class object (e.x. class={{'abc':true}}) for the Tag.",type:"String|Object",default:""},{property:"icon",description:"Sets the icon of the tag",type:"SvelteComponent",default:""},{property:"checked",description:"Checked status of Tag. If this prop is included the tag will be `checkable` and the background will be transparent by default",type:"Boolean",default:""},{property:"disableTransition",description:"Disable the fade and scale effect when the tag appears/disappears",type:"Boolean",default:"false"}]},{title:"Events",columns:["Name","Description"],data:[{name:"click",description:"Specify a function that will be called when a user clicks the tag."},{name:"close",description:"Specify a function that will be called when the user closes the tag by clicking the close icon. To prevent the tag from closing, a `event.detail.preventClose()` function is exposed."}]}]}class q extends e{constructor(e){super(),n(this,e,Y,H,t,{})}}function N(e){let n,t,o;const s=new q({});return{c(){n=i(),t=a("div"),c(s.$$.fragment),this.h()},l(e){k('[data-svelte="svelte-18g7s9"]',document.head).forEach(d),n=p(e),t=r(e,"DIV",{class:!0});var o=l(t);f(s.$$.fragment,o),o.forEach(d),this.h()},h(){document.title="Tag",y(t,"class","markdown api-container")},m(e,a){m(e,n,a),m(e,t,a),u(s,t,null),o=!0},p:E,i(e){o||(b(s.$$.fragment,e),o=!0)},o(e){v(s.$$.fragment,e),o=!1},d(e){e&&d(n),e&&d(t),C(s)}}}export default class extends e{constructor(e){super(),n(this,e,null,N,t,{})}}
