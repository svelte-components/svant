import{_ as n,a as o,i as e,s as t,b as a,S as r,C as l,e as i,t as s,c,W as d,g as f,h as m,j as p,d as u,f as h,Y as g,k as y,l as $,m as v,Z as b,x as w,ad as M,ae as E,A as k,B as C,$ as O,o as B,p as T,n as D}from"./client.79853e4c.js";import{P as x,D as S}from"./DocsTable.e54afbe9.js";import"./index.5100c5bb.js";import P from"./basic.demo.39572f74.js";import I from"./async.demo.f78395ac.js";import A from"./footer.demo.d73b3b46.js";import V from"./confirm.demo.39a9e5a4.js";import"./ModalInfoExample.b9984820.js";import j from"./information.demo.4d962cdd.js";import K from"./update-destroy.demo.897f963d.js";import H from"./positioning.demo.1a743de7.js";import L from"./destroy-all.demo.803769e4.js";function R(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}function W(n){for(var o,e,t,a,r,B,T,D,R,W,F,U,z,N,Y,G,q,Q,Z,_,J,X,nn,on,en,tn,an,rn,ln,sn,cn,dn,fn,mn,pn,un,hn,gn,yn,$n,vn,bn,wn,Mn,En,kn,Cn,On,Bn,Tn,Dn,xn,Sn,Pn,In,An,Vn,jn,Kn,Hn,Ln,Rn,Wn,Fn,Un,zn,Nn,Yn,Gn,qn,Qn,Zn,_n,Jn,Xn,no,oo,eo,to,ao,ro,lo,io,so,co,fo,mo,po,uo,ho,go,yo,$o,vo,bo,wo,Mo,Eo,ko,Co,Oo,Bo,To,Do,xo,So,Po,Io,Ao,Vo,jo,Ko,Ho,Lo,Ro,Wo,Fo,Uo,zo,No,Yo,Go,qo,Qo,Zo,_o,Jo,Xo,ne,oe,ee,te,ae,re,le,ie,se,ce,de,fe,me,pe,ue,he,ge,ye,$e,ve=new P({}),be=new x({props:{language:"svelte",source:'<Button type="primary" on:click="{showModal}">Open Modal</Button>\n<Modal\n  title="Basic Modal"\n  {visible}\n  on:ok="{openAnother}"\n  on:cancel="{closeModal}">\n  <p>Some contents...</p>\n  <p>Some contents...</p>\n  <p>Some contents...</p>\n</Modal>\n\n<script>\n  import { Modal, Button } from "svant";\n\n  let visible = false;\n\n  function showModal() {\n    visible = true;\n  }\n\n  function closeModal() {\n    visible = false;\n  }\n\n  function openAnother() {\n    Modal.confirm({\n      content: "Are you sure?",\n      onOk: () => {\n        closeModal();\n      }\n    });\n  }\n<\/script>\n'}}),we=new I({}),Me=new x({props:{language:"svelte",source:'<Button type="primary" on:click="{showModal}">\n  Open Modal with async logic\n</Button>\n<Modal\n  title="Title"\n  {visible}\n  on:ok="{handleOk}"\n  {confirmLoading}\n  on:cancel="{handleCancel}">\n  <p>{ModalText}</p>\n</Modal>\n\n<script>\n  import { Modal, Button } from "svant";\n\n  let visible = false;\n  let ModalText = "Content of the modal";\n  let confirmLoading = false;\n\n  function showModal() {\n    visible = true;\n  }\n\n  function handleOk() {\n    ModalText = "The modal will be closed after two seconds";\n    confirmLoading = true;\n\n    setTimeout(() => {\n      visible = false;\n      confirmLoading = false;\n      ModalText = "Content of the modal";\n    }, 2000);\n  }\n\n  function handleCancel() {\n    console.log("Cancel button pressed");\n    visible = false;\n  }\n<\/script>\n'}}),Ee=new A({}),ke=new x({props:{language:"svelte",source:'<Button type="primary" on:click="{showModal}">\n  Open Modal with customized footer\n</Button>\n<Modal {visible} title="Title" on:ok="{closeModal}" on:cancel="{closeModal}">\n  <p>Some contents...</p>\n  <p>Some contents...</p>\n  <p>Some contents...</p>\n  <p>Some contents...</p>\n  <p>Some contents...</p>\n\n  <span slot="footer">\n    <Button on:click="{closeModal}">Return</Button>\n    <Button type="primary" on:click="{closeModal}">Submit</Button>\n  </span>\n</Modal>\n\n<script>\n  import { Modal, Button } from "svant";\n\n  let visible = false;\n\n  function showModal() {\n    visible = true;\n  }\n\n  function closeModal() {\n    visible = false;\n  }\n<\/script>\n'}}),Ce=new V({}),Oe=new x({props:{language:"svelte",source:'<Button on:click="{showConfirm}">Confirm</Button>\n<Button on:click="{showDeleteConfirm}" type="dashed">Delete</Button>\n<Button on:click="{showPropsConfirm}" type="dashed">With extra props</Button>\n<Button on:click="{showPromiseConfirm}">Confirm with Promise</Button>\n\n<script>\n  import { Button, Modal } from "svant";\n  import { ExclamationCircleOutlined } from "svant/icons";\n\n  const { confirm } = Modal;\n\n  function showConfirm() {\n    confirm({\n      title: "Do you want to delete these items?",\n      icon: ExclamationCircleOutlined,\n      content: "Some descriptions",\n      onOk() {\n        console.log("OK");\n      },\n      onCancel() {\n        console.log("Cancel");\n      }\n    });\n  }\n\n  function showDeleteConfirm() {\n    confirm({\n      title: "Are you sure delete this task?",\n      icon: ExclamationCircleOutlined,\n      content: "Some descriptions",\n      okText: "Yes",\n      okType: "danger",\n      cancelText: "No",\n      onOk() {\n        console.log("OK");\n      },\n      onCancel() {\n        console.log("Cancel");\n      }\n    });\n  }\n\n  function showPropsConfirm() {\n    confirm({\n      title: "Are you sure delete this task?",\n      icon: ExclamationCircleOutlined,\n      content: "Some descriptions",\n      okText: "Yes",\n      okType: "danger",\n      okButtonProps: {\n        disabled: true\n      },\n      cancelText: "No",\n      onOk() {\n        console.log("OK");\n      },\n      onCancel() {\n        console.log("Cancel");\n      }\n    });\n  }\n\n  function showPromiseConfirm() {\n    confirm({\n      title: "Do you want to delete these items?",\n      icon: ExclamationCircleOutlined,\n      content:\n        "When clicked the OK button, this dialog will be closed after 1 second",\n      onOk() {\n        return new Promise((resolve, reject) => {\n          setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n        }).catch(() => console.log("Oops errors!"));\n      },\n      onCancel() {}\n    });\n  }\n<\/script>\n'}}),Be=new j({}),Te=new x({props:{language:"svelte",source:'<div class="information-buttons">\n  <Button on:click="{info}">Info</Button>\n  <Button on:click="{success}">Success</Button>\n  <Button on:click="{error}">Error</Button>\n  <Button on:click="{warning}">Warning</Button>\n</div>\n\n<script>\n  import { Button, Modal } from "svant";\n  import ModalInfoContent from "./ModalInfoExample.svelte";\n\n  function info() {\n    Modal.info({\n      title: "This is a notification message",\n      content: ModalInfoContent,\n      autoFocusButton: "ok",\n      onOk() {\n        console.log("OK Clicked");\n      }\n    });\n  }\n\n  function success() {\n    Modal.success({\n      content: "some messages...some messages..."\n    });\n  }\n\n  function error() {\n    Modal.error({\n      title: "This is an error message",\n      content: "some messages...some messages..."\n    });\n  }\n\n  function warning() {\n    Modal.warning({\n      title: "This is a warning message",\n      content: "some messages...some messages...",\n      closeable: true\n    });\n  }\n<\/script>\n'}}),De=new K({}),xe=new x({props:{language:"svelte",source:'<Button on:click="{countDown}">Open modal to close in 3s</Button>\n\n<script>\n  import { Button, Modal } from "svant";\n\n  function countDown() {\n    let secondsToGo = 3;\n    const modal = Modal.success({\n      title: "This is a notification message",\n      content: `This modal will be destroyed after ${secondsToGo} second.`\n    });\n    const timer = setInterval(() => {\n      secondsToGo -= 1;\n      modal.$set({\n        content: `This modal will be destroyed after ${secondsToGo} second.`\n      });\n    }, 1000);\n    setTimeout(() => {\n      clearInterval(timer);\n      modal.destroy();\n    }, secondsToGo * 1000);\n  }\n<\/script>\n'}}),Se=new H({}),Pe=new x({props:{language:"svelte",source:'<Button type="primary" on:click="{() => setModal1Visible(true)}">\n  Open 20px from the top\n</Button>\n\n<Button type="primary" on:click="{() => setModal2Visible(true)}">\n  Vertically centered\n</Button>\n\n<Modal\n  title="Top right corner"\n  verticalPosition="{{ top: \'20px\' }}"\n  visible="{modal1Visible}"\n  on:ok="{() => setModal1Visible(false)}"\n  on:cancel="{() => setModal1Visible(false)}">\n  <p>some contents...</p>\n  <p>some contents...</p>\n  <p>some contents...</p>\n</Modal>\n\n<Modal\n  title="Vertically centered modal dialog"\n  centered\n  visible="{modal2Visible}"\n  on:ok="{() => setModal2Visible(false)}"\n  on:cancel="{() => setModal2Visible(false)}">\n  <p>some contents...</p>\n  <p>some contents...</p>\n  <p>some contents...</p>\n</Modal>\n\n<script>\n  import { Button, Modal } from "svant";\n\n  export let modal1Visible = false;\n  export let modal2Visible = false;\n\n  function setModal1Visible(visible) {\n    modal1Visible = visible;\n  }\n\n  function setModal2Visible(visible) {\n    modal2Visible = visible;\n  }\n<\/script>\n'}}),Ie=new L({}),Ae=new x({props:{language:"svelte",source:'<Button on:click="{showAll}">Show Modal</Button>\n\n<script>\n  import { Button, Modal } from "svant";\n  import { ExclamationCircleOutlined } from "svant/icons";\n\n  const { confirm } = Modal;\n\n  function showAll() {\n    for (let i = 0; i < 3; i += 1) {\n      setTimeout(() => {\n        confirm({\n          icon: ExclamationCircleOutlined,\n          content: "Clicking any button will close all three",\n          onOk() {\n            destroyAll();\n          },\n          onCancel() {\n            destroyAll();\n          }\n        });\n      }, i * 500);\n    }\n  }\n\n  function destroyAll() {\n    Modal.destroyAll();\n  }\n<\/script>\n'}}),Ve=[n[0]],je={},Ke=0;Ke<Ve.length;Ke+=1)je=l(je,Ve[Ke]);for(var He=new S({props:je}),Le=[n[1]],Re={},We=0;We<Le.length;We+=1)Re=l(Re,Le[We]);for(var Fe=new S({props:Re}),Ue=[n[2]],ze={},Ne=0;Ne<Ue.length;Ne+=1)ze=l(ze,Ue[Ne]);var Ye=new S({props:ze});return{c:function(){o=i("h1"),e=s("Modal"),t=c(),a=i("p"),r=s("Description of the Modal's function."),B=c(),T=i("h2"),D=s("Examples"),R=c(),W=i("h3"),F=s("Basic"),U=c(),z=i("div"),d(ve.$$.fragment),N=c(),d(be.$$.fragment),Y=c(),G=i("h3"),q=s("Asynchronously Close"),Q=c(),Z=i("p"),_=s("Asynchronously close a modal dialog when a the OK button is pressed. For example, you can use this pattern when you submit a form."),J=c(),X=i("div"),d(we.$$.fragment),nn=c(),d(Me.$$.fragment),on=c(),en=i("h3"),tn=s("Customized Footer"),an=c(),rn=i("p"),ln=s("A more complex example which define a customized footer button bar. The dialog will change to loading state after clicking the submit button, and when the loading is done, the modal dialog will be closed."),sn=c(),cn=i("p"),dn=s("You could set the footer prop to null if you don't need default footer buttons."),fn=c(),mn=i("div"),d(Ee.$$.fragment),pn=c(),d(ke.$$.fragment),un=c(),hn=i("h3"),gn=s("Confirmation Modal Dialog"),yn=c(),$n=i("p"),vn=s("Use "),bn=i("code"),wn=s("Modal.confirm()"),Mn=s(" to show a confirmation modal dialog. The "),En=i("code"),kn=s("onOk"),Cn=s(" and "),On=i("code"),Bn=s("onCancel"),Tn=s(" buttons can return a promise and will delay the modal from closing until completed."),Dn=c(),xn=i("div"),d(Ce.$$.fragment),Sn=c(),d(Oe.$$.fragment),Pn=c(),In=i("h3"),An=s("Information Modal Dialog"),Vn=c(),jn=i("p"),Kn=s("The information modal dialog is used to communicate system status. Only one button is used to close the dialog."),Hn=c(),Ln=i("div"),d(Be.$$.fragment),Rn=c(),d(Te.$$.fragment),Wn=c(),Fn=i("h3"),Un=s("Manually Updating and Destroying"),zn=c(),Nn=i("p"),Yn=s("Use Svelte's built in "),Gn=i("code"),qn=s("$set"),Qn=s(" function to update the modal. The "),Zn=i("code"),_n=s("Modal.destroy()"),Jn=s(" function will destroy a modal."),Xn=c(),no=i("div"),d(De.$$.fragment),oo=c(),d(xe.$$.fragment),eo=c(),to=i("h3"),ao=s("Positioning"),ro=c(),lo=i("p"),io=s("You can use the centered prop, or set the verticalPosition's top or bottom to position the modal."),so=c(),co=i("div"),d(Se.$$.fragment),fo=c(),d(Pe.$$.fragment),mo=c(),po=i("h3"),uo=s("Destroying all Modals Open"),ho=c(),go=i("p"),yo=i("code"),$o=s("Modal.destroyAll()"),vo=s(" will destroy all confirmation modal dialogs."),bo=c(),wo=i("div"),d(Ie.$$.fragment),Mo=c(),d(Ae.$$.fragment),Eo=c(),ko=i("h2"),Co=s("API"),Oo=c(),d(He.$$.fragment),Bo=c(),d(Fe.$$.fragment),To=c(),Do=i("h3"),xo=s("Modal.method()"),So=c(),Po=i("p"),Io=s("There are five ways to display the information based on the content's nature:"),Ao=c(),Vo=i("ul"),jo=i("li"),Ko=i("code"),Ho=s("Modal.info"),Lo=c(),Ro=i("li"),Wo=i("code"),Fo=s("Modal.success"),Uo=c(),zo=i("li"),No=i("code"),Yo=s("Modal.error"),Go=c(),qo=i("li"),Qo=i("code"),Zo=s("Modal.warning"),_o=c(),Jo=i("li"),Xo=i("code"),ne=s("Modal.confirm"),oe=c(),ee=i("p"),te=s("The items listed above are all functions, expecting a settings object as parameter. The settings object takes any of the props above as attributes."),ae=c(),re=i("blockquote"),le=i("p"),ie=s("Note: The "),se=i("code"),ce=s("closeable"),de=s(" and "),fe=i("code"),me=s("maskClosable"),pe=s(" props default to false for these types of modals."),ue=c(),he=i("p"),ge=s("Additionally these options are available:"),ye=c(),d(Ye.$$.fragment),this.h()},l:function(n){o=f(n,"H1",{});var l=m(o);e=p(l,"Modal"),l.forEach(u),t=h(n),a=f(n,"P",{});var i=m(a);r=p(i,"Description of the Modal's function."),i.forEach(u),B=h(n),T=f(n,"H2",{});var s=m(T);D=p(s,"Examples"),s.forEach(u),R=h(n),W=f(n,"H3",{});var c=m(W);F=p(c,"Basic"),c.forEach(u),U=h(n),z=f(n,"DIV",{id:!0});var d=m(z);g(ve.$$.fragment,d),d.forEach(u),N=h(n),g(be.$$.fragment,n),Y=h(n),G=f(n,"H3",{});var y=m(G);q=p(y,"Asynchronously Close"),y.forEach(u),Q=h(n),Z=f(n,"P",{});var $=m(Z);_=p($,"Asynchronously close a modal dialog when a the OK button is pressed. For example, you can use this pattern when you submit a form."),$.forEach(u),J=h(n),X=f(n,"DIV",{id:!0});var v=m(X);g(we.$$.fragment,v),v.forEach(u),nn=h(n),g(Me.$$.fragment,n),on=h(n),en=f(n,"H3",{});var b=m(en);tn=p(b,"Customized Footer"),b.forEach(u),an=h(n),rn=f(n,"P",{});var w=m(rn);ln=p(w,"A more complex example which define a customized footer button bar. The dialog will change to loading state after clicking the submit button, and when the loading is done, the modal dialog will be closed."),w.forEach(u),sn=h(n),cn=f(n,"P",{});var M=m(cn);dn=p(M,"You could set the footer prop to null if you don't need default footer buttons."),M.forEach(u),fn=h(n),mn=f(n,"DIV",{id:!0});var E=m(mn);g(Ee.$$.fragment,E),E.forEach(u),pn=h(n),g(ke.$$.fragment,n),un=h(n),hn=f(n,"H3",{});var k=m(hn);gn=p(k,"Confirmation Modal Dialog"),k.forEach(u),yn=h(n),$n=f(n,"P",{});var C=m($n);vn=p(C,"Use "),bn=f(C,"CODE",{});var O=m(bn);wn=p(O,"Modal.confirm()"),O.forEach(u),Mn=p(C," to show a confirmation modal dialog. The "),En=f(C,"CODE",{});var x=m(En);kn=p(x,"onOk"),x.forEach(u),Cn=p(C," and "),On=f(C,"CODE",{});var S=m(On);Bn=p(S,"onCancel"),S.forEach(u),Tn=p(C," buttons can return a promise and will delay the modal from closing until completed."),C.forEach(u),Dn=h(n),xn=f(n,"DIV",{id:!0});var P=m(xn);g(Ce.$$.fragment,P),P.forEach(u),Sn=h(n),g(Oe.$$.fragment,n),Pn=h(n),In=f(n,"H3",{});var I=m(In);An=p(I,"Information Modal Dialog"),I.forEach(u),Vn=h(n),jn=f(n,"P",{});var A=m(jn);Kn=p(A,"The information modal dialog is used to communicate system status. Only one button is used to close the dialog."),A.forEach(u),Hn=h(n),Ln=f(n,"DIV",{id:!0});var V=m(Ln);g(Be.$$.fragment,V),V.forEach(u),Rn=h(n),g(Te.$$.fragment,n),Wn=h(n),Fn=f(n,"H3",{});var j=m(Fn);Un=p(j,"Manually Updating and Destroying"),j.forEach(u),zn=h(n),Nn=f(n,"P",{});var K=m(Nn);Yn=p(K,"Use Svelte's built in "),Gn=f(K,"CODE",{});var H=m(Gn);qn=p(H,"$set"),H.forEach(u),Qn=p(K," function to update the modal. The "),Zn=f(K,"CODE",{});var L=m(Zn);_n=p(L,"Modal.destroy()"),L.forEach(u),Jn=p(K," function will destroy a modal."),K.forEach(u),Xn=h(n),no=f(n,"DIV",{id:!0});var $e=m(no);g(De.$$.fragment,$e),$e.forEach(u),oo=h(n),g(xe.$$.fragment,n),eo=h(n),to=f(n,"H3",{});var Ve=m(to);ao=p(Ve,"Positioning"),Ve.forEach(u),ro=h(n),lo=f(n,"P",{});var je=m(lo);io=p(je,"You can use the centered prop, or set the verticalPosition's top or bottom to position the modal."),je.forEach(u),so=h(n),co=f(n,"DIV",{id:!0});var Ke=m(co);g(Se.$$.fragment,Ke),Ke.forEach(u),fo=h(n),g(Pe.$$.fragment,n),mo=h(n),po=f(n,"H3",{});var Le=m(po);uo=p(Le,"Destroying all Modals Open"),Le.forEach(u),ho=h(n),go=f(n,"P",{});var Re=m(go);yo=f(Re,"CODE",{});var We=m(yo);$o=p(We,"Modal.destroyAll()"),We.forEach(u),vo=p(Re," will destroy all confirmation modal dialogs."),Re.forEach(u),bo=h(n),wo=f(n,"DIV",{id:!0});var Ue=m(wo);g(Ie.$$.fragment,Ue),Ue.forEach(u),Mo=h(n),g(Ae.$$.fragment,n),Eo=h(n),ko=f(n,"H2",{});var ze=m(ko);Co=p(ze,"API"),ze.forEach(u),Oo=h(n),g(He.$$.fragment,n),Bo=h(n),g(Fe.$$.fragment,n),To=h(n),Do=f(n,"H3",{});var Ne=m(Do);xo=p(Ne,"Modal.method()"),Ne.forEach(u),So=h(n),Po=f(n,"P",{});var Ge=m(Po);Io=p(Ge,"There are five ways to display the information based on the content's nature:"),Ge.forEach(u),Ao=h(n),Vo=f(n,"UL",{});var qe=m(Vo);jo=f(qe,"LI",{});var Qe=m(jo);Ko=f(Qe,"CODE",{});var Ze=m(Ko);Ho=p(Ze,"Modal.info"),Ze.forEach(u),Qe.forEach(u),Lo=h(qe),Ro=f(qe,"LI",{});var _e=m(Ro);Wo=f(_e,"CODE",{});var Je=m(Wo);Fo=p(Je,"Modal.success"),Je.forEach(u),_e.forEach(u),Uo=h(qe),zo=f(qe,"LI",{});var Xe=m(zo);No=f(Xe,"CODE",{});var nt=m(No);Yo=p(nt,"Modal.error"),nt.forEach(u),Xe.forEach(u),Go=h(qe),qo=f(qe,"LI",{});var ot=m(qo);Qo=f(ot,"CODE",{});var et=m(Qo);Zo=p(et,"Modal.warning"),et.forEach(u),ot.forEach(u),_o=h(qe),Jo=f(qe,"LI",{});var tt=m(Jo);Xo=f(tt,"CODE",{});var at=m(Xo);ne=p(at,"Modal.confirm"),at.forEach(u),tt.forEach(u),qe.forEach(u),oe=h(n),ee=f(n,"P",{});var rt=m(ee);te=p(rt,"The items listed above are all functions, expecting a settings object as parameter. The settings object takes any of the props above as attributes."),rt.forEach(u),ae=h(n),re=f(n,"BLOCKQUOTE",{});var lt=m(re);le=f(lt,"P",{});var it=m(le);ie=p(it,"Note: The "),se=f(it,"CODE",{});var st=m(se);ce=p(st,"closeable"),st.forEach(u),de=p(it," and "),fe=f(it,"CODE",{});var ct=m(fe);me=p(ct,"maskClosable"),ct.forEach(u),pe=p(it," props default to false for these types of modals."),it.forEach(u),lt.forEach(u),ue=h(n),he=f(n,"P",{});var dt=m(he);ge=p(dt,"Additionally these options are available:"),dt.forEach(u),ye=h(n),g(Ye.$$.fragment,n),this.h()},h:function(){y(z,"id","components-modal-demo-basic"),y(X,"id","components-modal-demo-async-close"),y(mn,"id","components-modal-demo-async-close"),y(xn,"id","components-modal-demo-confirm"),y(Ln,"id","components-modal-demo-information"),y(no,"id","components-modal-demo-update-destroy"),y(co,"id","components-modal-demo-position"),y(wo,"id","components-modal-demo-destroy-all")},m:function(n,l){$(n,o,l),v(o,e),$(n,t,l),$(n,a,l),v(a,r),$(n,B,l),$(n,T,l),v(T,D),$(n,R,l),$(n,W,l),v(W,F),$(n,U,l),$(n,z,l),b(ve,z,null),$(n,N,l),b(be,n,l),$(n,Y,l),$(n,G,l),v(G,q),$(n,Q,l),$(n,Z,l),v(Z,_),$(n,J,l),$(n,X,l),b(we,X,null),$(n,nn,l),b(Me,n,l),$(n,on,l),$(n,en,l),v(en,tn),$(n,an,l),$(n,rn,l),v(rn,ln),$(n,sn,l),$(n,cn,l),v(cn,dn),$(n,fn,l),$(n,mn,l),b(Ee,mn,null),$(n,pn,l),b(ke,n,l),$(n,un,l),$(n,hn,l),v(hn,gn),$(n,yn,l),$(n,$n,l),v($n,vn),v($n,bn),v(bn,wn),v($n,Mn),v($n,En),v(En,kn),v($n,Cn),v($n,On),v(On,Bn),v($n,Tn),$(n,Dn,l),$(n,xn,l),b(Ce,xn,null),$(n,Sn,l),b(Oe,n,l),$(n,Pn,l),$(n,In,l),v(In,An),$(n,Vn,l),$(n,jn,l),v(jn,Kn),$(n,Hn,l),$(n,Ln,l),b(Be,Ln,null),$(n,Rn,l),b(Te,n,l),$(n,Wn,l),$(n,Fn,l),v(Fn,Un),$(n,zn,l),$(n,Nn,l),v(Nn,Yn),v(Nn,Gn),v(Gn,qn),v(Nn,Qn),v(Nn,Zn),v(Zn,_n),v(Nn,Jn),$(n,Xn,l),$(n,no,l),b(De,no,null),$(n,oo,l),b(xe,n,l),$(n,eo,l),$(n,to,l),v(to,ao),$(n,ro,l),$(n,lo,l),v(lo,io),$(n,so,l),$(n,co,l),b(Se,co,null),$(n,fo,l),b(Pe,n,l),$(n,mo,l),$(n,po,l),v(po,uo),$(n,ho,l),$(n,go,l),v(go,yo),v(yo,$o),v(go,vo),$(n,bo,l),$(n,wo,l),b(Ie,wo,null),$(n,Mo,l),b(Ae,n,l),$(n,Eo,l),$(n,ko,l),v(ko,Co),$(n,Oo,l),b(He,n,l),$(n,Bo,l),b(Fe,n,l),$(n,To,l),$(n,Do,l),v(Do,xo),$(n,So,l),$(n,Po,l),v(Po,Io),$(n,Ao,l),$(n,Vo,l),v(Vo,jo),v(jo,Ko),v(Ko,Ho),v(Vo,Lo),v(Vo,Ro),v(Ro,Wo),v(Wo,Fo),v(Vo,Uo),v(Vo,zo),v(zo,No),v(No,Yo),v(Vo,Go),v(Vo,qo),v(qo,Qo),v(Qo,Zo),v(Vo,_o),v(Vo,Jo),v(Jo,Xo),v(Xo,ne),$(n,oe,l),$(n,ee,l),v(ee,te),$(n,ae,l),$(n,re,l),v(re,le),v(le,ie),v(le,se),v(se,ce),v(le,de),v(le,fe),v(fe,me),v(le,pe),$(n,ue,l),$(n,he,l),v(he,ge),$(n,ye,l),b(Ye,n,l),$e=!0},p:function(n,o){var e=w(o,1)[0],t=1&e?M(Ve,[E(n[0])]):{};He.$set(t);var a=2&e?M(Le,[E(n[1])]):{};Fe.$set(a);var r=4&e?M(Ue,[E(n[2])]):{};Ye.$set(r)},i:function(n){$e||(k(ve.$$.fragment,n),k(be.$$.fragment,n),k(we.$$.fragment,n),k(Me.$$.fragment,n),k(Ee.$$.fragment,n),k(ke.$$.fragment,n),k(Ce.$$.fragment,n),k(Oe.$$.fragment,n),k(Be.$$.fragment,n),k(Te.$$.fragment,n),k(De.$$.fragment,n),k(xe.$$.fragment,n),k(Se.$$.fragment,n),k(Pe.$$.fragment,n),k(Ie.$$.fragment,n),k(Ae.$$.fragment,n),k(He.$$.fragment,n),k(Fe.$$.fragment,n),k(Ye.$$.fragment,n),$e=!0)},o:function(n){C(ve.$$.fragment,n),C(be.$$.fragment,n),C(we.$$.fragment,n),C(Me.$$.fragment,n),C(Ee.$$.fragment,n),C(ke.$$.fragment,n),C(Ce.$$.fragment,n),C(Oe.$$.fragment,n),C(Be.$$.fragment,n),C(Te.$$.fragment,n),C(De.$$.fragment,n),C(xe.$$.fragment,n),C(Se.$$.fragment,n),C(Pe.$$.fragment,n),C(Ie.$$.fragment,n),C(Ae.$$.fragment,n),C(He.$$.fragment,n),C(Fe.$$.fragment,n),C(Ye.$$.fragment,n),$e=!1},d:function(n){n&&u(o),n&&u(t),n&&u(a),n&&u(B),n&&u(T),n&&u(R),n&&u(W),n&&u(U),n&&u(z),O(ve),n&&u(N),O(be,n),n&&u(Y),n&&u(G),n&&u(Q),n&&u(Z),n&&u(J),n&&u(X),O(we),n&&u(nn),O(Me,n),n&&u(on),n&&u(en),n&&u(an),n&&u(rn),n&&u(sn),n&&u(cn),n&&u(fn),n&&u(mn),O(Ee),n&&u(pn),O(ke,n),n&&u(un),n&&u(hn),n&&u(yn),n&&u($n),n&&u(Dn),n&&u(xn),O(Ce),n&&u(Sn),O(Oe,n),n&&u(Pn),n&&u(In),n&&u(Vn),n&&u(jn),n&&u(Hn),n&&u(Ln),O(Be),n&&u(Rn),O(Te,n),n&&u(Wn),n&&u(Fn),n&&u(zn),n&&u(Nn),n&&u(Xn),n&&u(no),O(De),n&&u(oo),O(xe,n),n&&u(eo),n&&u(to),n&&u(ro),n&&u(lo),n&&u(so),n&&u(co),O(Se),n&&u(fo),O(Pe,n),n&&u(mo),n&&u(po),n&&u(ho),n&&u(go),n&&u(bo),n&&u(wo),O(Ie),n&&u(Mo),O(Ae,n),n&&u(Eo),n&&u(ko),n&&u(Oo),O(He,n),n&&u(Bo),O(Fe,n),n&&u(To),n&&u(Do),n&&u(So),n&&u(Po),n&&u(Ao),n&&u(Vo),n&&u(oe),n&&u(ee),n&&u(ae),n&&u(re),n&&u(ue),n&&u(he),n&&u(ye),O(Ye,n)}}}function F(n){return[{title:"Attributes",columns:["Property","Description","Type","Default"],data:[{property:"bodyStyle",description:"Body style for modal body element. Such as height, padding etc.",type:"String|Object",default:""},{property:"cancelText",description:"Text of the Cancel button.",type:"String",default:"Cancel"},{property:"centered",description:"Centered Modal",type:"Boolean",default:"false"},{property:"closable",description:"Whether a close (x) button is visible on top right of the modal dialog or not.",type:"Boolean",default:"true"},{property:"closeIcon",description:"Custom close icon.",type:"SvelteComponent",default:"CloseOutlined"},{property:"confirmLoading",description:"Whether to apply loading visual effect for OK button or not.",type:"Boolean",default:"false"},{property:"mask",description:"Whether show mask or not.",type:"Boolean",default:"true"},{property:"maskClosable",description:"Whether to close the modal dialog when the mask (area outside the modal) is clicked.",type:"Boolean",default:"true"},{property:"maskStyle",description:"Style for modal's mask element.",type:"String|Object",default:""},{property:"okText",description:"Text of the OK button.",type:"String",default:"OK"},{property:"okType",description:"Button `type` of the OK button.",type:"String",default:"primary"},{property:"okButtonProps",description:"The OK button props.",type:"Object",default:"{}"},{property:"cancelButtonProps",description:"The Cancel button props.",type:"Object",default:"{}"},{property:"verticalPosition",description:"The vertical position of the modal (top or bottom)",type:"Object",default:"{}"},{property:"title",description:"The modal dialog's title",type:"String",default:"-"},{property:"visible",description:"Whether the modal dialog is visible or not.",type:"Boolean",default:"false"},{property:"width",description:"Width of the modal dialog.",type:"String",default:"520px"},{property:"wrapClassName",description:"The class name of the container of the modal dialog.",type:"String",default:"-"},{property:"zIndex",description:"The `z-index` of the Modal.",type:"Number",default:"1000"},{property:"autoFocusButton",description:"Specify which button to autofocus when the modal opens.",type:"null|'ok'|'cancel'",default:"ok"},{property:"keyboard",description:"Whether the escape key will close the modal.",type:"Boolean",default:"true"}]},{title:"Events",columns:["Name","Description"],data:[{name:"cancel",description:"Specify a function that will be called when a user clicks mask, close button on top right or Cancel button."},{name:"ok",description:"Specify a function that will be called when a user clicks the OK button."},{property:"after-close",description:"Specify a function that will be called when modal is closed completely."}]},{title:"Modal.method() Attributes",columns:["Property","Description","Type","Default"],data:[{property:"content",description:"Content for the modal body.",type:"String|SvelteComponent",default:"-"},{property:"icon",description:"Custom icon to display next to the content.",type:"SvelteComponent",default:"Depends on the modal method"},{property:"onCancel",description:"Specify a function that will be called when a user clicks mask, close button on top right or Cancel button.",type:"Function",default:"-"},{property:"onOk",description:"Specify a function that will be called when a user clicks the OK button.",type:"Function",default:"-"}]}]}var U=function(l){n(c,r);var i,s=(i=c,function(){var n,o=B(i);if(R()){var e=B(this).constructor;n=Reflect.construct(o,arguments,e)}else n=o.apply(this,arguments);return T(this,n)});function c(n){var r;return o(this,c),r=s.call(this),e(a(r),n,F,W,t,{}),r}return c}();function z(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}function N(n){var o,e,t=new U({});return{c:function(){o=i("div"),d(t.$$.fragment),this.h()},l:function(n){o=f(n,"DIV",{class:!0});var e=m(o);g(t.$$.fragment,e),e.forEach(u),this.h()},h:function(){y(o,"class","markdown api-container")},m:function(n,a){$(n,o,a),b(t,o,null),e=!0},p:D,i:function(n){e||(k(t.$$.fragment,n),e=!0)},o:function(n){C(t.$$.fragment,n),e=!1},d:function(n){n&&u(o),O(t)}}}var Y=function(l){n(c,r);var i,s=(i=c,function(){var n,o=B(i);if(z()){var e=B(this).constructor;n=Reflect.construct(o,arguments,e)}else n=o.apply(this,arguments);return T(this,n)});function c(n){var r;return o(this,c),r=s.call(this),e(a(r),n,null,N,t,{}),r}return c}();export default Y;
