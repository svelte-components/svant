import{S as t,i as e,s as n,x as s,e as o,t as c,a as i,C as a,b as r,f as d,g as h,d as l,c as p,D as f,j as m,k as $,E as u,a4 as g,a5 as w,v as b,w as k,G as S,h as v,q as C,n as y}from"./client.3858c3b9.js";import{E,D as x}from"./DocsTable.90fbcd06.js";import"./index.93a3338f.js";import D from"./basic.demo.a5e0d8ed.js";import B from"./disabled.demo.88a76456.js";import j from"./slot.demo.8ddf10cc.js";import z from"./size.demo.4c74e504.js";import O from"./loading.demo.6d4d4387.js";function P(t){let e,n;return{c(){e=o("p"),n=c("Basic switch usage"),this.h()},l(t){e=r(t,"P",{slot:!0});var s=d(e);n=h(s,"Basic switch usage"),s.forEach(l),this.h()},h(){v(e,"slot","description")},m(t,s){m(t,e,s),$(e,n)},d(t){t&&l(e)}}}function T(t){let e,n,s,i;return{c(){e=o("p"),n=c("Disable state of "),s=o("code"),i=c("switch"),this.h()},l(t){e=r(t,"P",{slot:!0});var o=d(e);n=h(o,"Disable state of "),s=r(o,"CODE",{});var c=d(s);i=h(c,"switch"),c.forEach(l),o.forEach(l),this.h()},h(){v(e,"slot","description")},m(t,o){m(t,e,o),$(e,n),$(e,s),$(s,i)},d(t){t&&l(e)}}}function H(t){let e,n;return{c(){e=o("p"),n=c("How to use slots to set values for checked/unchecked state"),this.h()},l(t){e=r(t,"P",{slot:!0});var s=d(e);n=h(s,"How to use slots to set values for checked/unchecked state"),s.forEach(l),this.h()},h(){v(e,"slot","description")},m(t,s){m(t,e,s),$(e,n)},d(t){t&&l(e)}}}function L(t){let e,n,s,i,a,p,f;return{c(){e=o("p"),n=c("Switches can be either the "),s=o("code"),i=c("default"),a=c(" size or "),p=o("code"),f=c("small"),this.h()},l(t){e=r(t,"P",{slot:!0});var o=d(e);n=h(o,"Switches can be either the "),s=r(o,"CODE",{});var c=d(s);i=h(c,"default"),c.forEach(l),a=h(o," size or "),p=r(o,"CODE",{});var m=d(p);f=h(m,"small"),m.forEach(l),o.forEach(l),this.h()},h(){v(e,"slot","description")},m(t,o){m(t,e,o),$(e,n),$(e,s),$(s,i),$(e,a),$(e,p),$(p,f)},d(t){t&&l(e)}}}function N(t){let e,n;return{c(){e=o("p"),n=c("Loading state of the switch"),this.h()},l(t){e=r(t,"P",{slot:!0});var s=d(e);n=h(s,"Loading state of the switch"),s.forEach(l),this.h()},h(){v(e,"slot","description")},m(t,s){m(t,e,s),$(e,n)},d(t){t&&l(e)}}}function A(t){let e,n,v,C,y,A,F,I,U,G,q,V,J,K,M,Q,R,W,X,Y,Z;const _=new E({props:{id:"switch-demo-basic",title:"Basic",demoComponent:D,demoCode:'<Switch on:change="{onChange}" defaultChecked />\n\n<script>\n  import { Switch } from "svant";\n  function onChange({ detail: checked }) {\n    console.log(`switch to ${checked}`);\n  }\n<\/script>\n',$$slots:{description:[P]},$$scope:{ctx:t}}}),tt=new E({props:{id:"switch-demo-basic",title:"Disabled",demoComponent:B,demoCode:'<Switch {disabled} defaultChecked />\n<br />\n<Button type="primary" on:click="{toggle}" style="{{ marginTop: \'16px\' }}">\n  Toggle disabled\n</Button>\n\n<script>\n  import { Button, Switch } from "svant";\n  let disabled = true;\n  function onChange({ detail: checked }) {\n    console.log(`switch to ${checked}`);\n  }\n  function toggle() {\n    disabled = !disabled;\n  }\n<\/script>\n',$$slots:{description:[T]},$$scope:{ctx:t}}}),et=new E({props:{id:"switch-demo-basic",title:"Using Slots",demoComponent:j,demoCode:'<Switch defaultChecked>\n  <span slot="checked">ON</span>\n  <span slot="unchecked">OFF</span>\n</Switch>\n<br />\n<Switch defaultChecked>\n  <span slot="checked">1</span>\n  <span slot="unchecked">0</span>\n</Switch>\n<br />\n<Switch defaultChecked>\n  <div slot="checked">\n    <CheckOutlined />\n  </div>\n  <div slot="unchecked">\n    <CloseOutlined />\n  </div>\n</Switch>\n\n<script>\n  import { Button, Switch } from "svant";\n  import { CheckOutlined, CloseOutlined } from "svant/icons";\n<\/script>\n',$$slots:{description:[H]},$$scope:{ctx:t}}}),nt=new E({props:{id:"switch-demo-basic",title:"Switch size",demoComponent:z,demoCode:'<div>\n  <Switch defaultChecked />\n  <br />\n  <Switch size="small" defaultChecked />\n</div>\n\n<script>\n  import { Switch } from "svant";\n<\/script>\n',$$slots:{description:[L]},$$scope:{ctx:t}}}),st=new E({props:{id:"switch-demo-basic",title:"Loading",demoComponent:O,demoCode:'<Switch loading defaultChecked />\n<br />\n<Switch size="small" loading />\n\n<script>\n  import { Button, Switch } from "svant";\n<\/script>\n',$$slots:{description:[N]},$$scope:{ctx:t}}}),ot=[t[0]];let ct={};for(let t=0;t<ot.length;t+=1)ct=s(ct,ot[t]);const it=new x({props:ct}),at=[t[1]];let rt={};for(let t=0;t<at.length;t+=1)rt=s(rt,at[t]);const dt=new x({props:rt}),ht=[t[2]];let lt={};for(let t=0;t<ht.length;t+=1)lt=s(lt,ht[t]);const pt=new x({props:lt}),ft=[t[3]];let mt={};for(let t=0;t<ft.length;t+=1)mt=s(mt,ft[t]);const $t=new x({props:mt});return{c(){e=o("h1"),n=c("Switch"),v=i(),C=o("p"),y=c("Switch is used to represent switching between two states (e.x on-off)"),A=i(),F=o("h2"),I=c("Examples"),U=i(),a(_.$$.fragment),G=i(),a(tt.$$.fragment),q=i(),a(et.$$.fragment),V=i(),a(nt.$$.fragment),J=i(),a(st.$$.fragment),K=i(),M=o("h2"),Q=c("API"),R=i(),a(it.$$.fragment),W=i(),a(dt.$$.fragment),X=i(),a(pt.$$.fragment),Y=i(),a($t.$$.fragment)},l(t){e=r(t,"H1",{});var s=d(e);n=h(s,"Switch"),s.forEach(l),v=p(t),C=r(t,"P",{});var o=d(C);y=h(o,"Switch is used to represent switching between two states (e.x on-off)"),o.forEach(l),A=p(t),F=r(t,"H2",{});var c=d(F);I=h(c,"Examples"),c.forEach(l),U=p(t),f(_.$$.fragment,t),G=p(t),f(tt.$$.fragment,t),q=p(t),f(et.$$.fragment,t),V=p(t),f(nt.$$.fragment,t),J=p(t),f(st.$$.fragment,t),K=p(t),M=r(t,"H2",{});var i=d(M);Q=h(i,"API"),i.forEach(l),R=p(t),f(it.$$.fragment,t),W=p(t),f(dt.$$.fragment,t),X=p(t),f(pt.$$.fragment,t),Y=p(t),f($t.$$.fragment,t)},m(t,s){m(t,e,s),$(e,n),m(t,v,s),m(t,C,s),$(C,y),m(t,A,s),m(t,F,s),$(F,I),m(t,U,s),u(_,t,s),m(t,G,s),u(tt,t,s),m(t,q,s),u(et,t,s),m(t,V,s),u(nt,t,s),m(t,J,s),u(st,t,s),m(t,K,s),m(t,M,s),$(M,Q),m(t,R,s),u(it,t,s),m(t,W,s),u(dt,t,s),m(t,X,s),u(pt,t,s),m(t,Y,s),u($t,t,s),Z=!0},p(t,[e]){const n={};16&e&&(n.$$scope={dirty:e,ctx:t}),_.$set(n);const s={};16&e&&(s.$$scope={dirty:e,ctx:t}),tt.$set(s);const o={};16&e&&(o.$$scope={dirty:e,ctx:t}),et.$set(o);const c={};16&e&&(c.$$scope={dirty:e,ctx:t}),nt.$set(c);const i={};16&e&&(i.$$scope={dirty:e,ctx:t}),st.$set(i);const a=1&e?g(ot,[w(t[0])]):{};it.$set(a);const r=2&e?g(at,[w(t[1])]):{};dt.$set(r);const d=4&e?g(ht,[w(t[2])]):{};pt.$set(d);const h=8&e?g(ft,[w(t[3])]):{};$t.$set(h)},i(t){Z||(b(_.$$.fragment,t),b(tt.$$.fragment,t),b(et.$$.fragment,t),b(nt.$$.fragment,t),b(st.$$.fragment,t),b(it.$$.fragment,t),b(dt.$$.fragment,t),b(pt.$$.fragment,t),b($t.$$.fragment,t),Z=!0)},o(t){k(_.$$.fragment,t),k(tt.$$.fragment,t),k(et.$$.fragment,t),k(nt.$$.fragment,t),k(st.$$.fragment,t),k(it.$$.fragment,t),k(dt.$$.fragment,t),k(pt.$$.fragment,t),k($t.$$.fragment,t),Z=!1},d(t){t&&l(e),t&&l(v),t&&l(C),t&&l(A),t&&l(F),t&&l(U),S(_,t),t&&l(G),S(tt,t),t&&l(q),S(et,t),t&&l(V),S(nt,t),t&&l(J),S(st,t),t&&l(K),t&&l(M),t&&l(R),S(it,t),t&&l(W),S(dt,t),t&&l(X),S(pt,t),t&&l(Y),S($t,t)}}}function F(t){return[{title:"Attributes",columns:["Property","Description","Type","Default"],data:[{property:"autoFocus",description:"Get focus when component mounted.",type:"Boolean",default:"false"},{property:"checked",description:"Determine whether the Switch is checked, if this prop is set the component will not handle state change the prop needs to change if you want to change the state.",type:"Boolean",default:"false"},{property:"defaultChecked",description:"Default state of the Switch",type:"Boolean",default:"false"},{property:"disabled",description:"Disables the Switch",type:"Boolean",default:"false"},{property:"loading",description:"Shows loading for the Switch",type:"Boolean",default:"false"},{property:"size",description:"The size of the Switch, options: `default` `small`",type:"String",default:"default"}]},{title:"Events",columns:["Name","Description"],data:[{name:"change",description:"Triggers when the switch value changes."},{name:"click",description:"Triggers when the switch is clicked."}]},{title:"Bind",columns:["Name","Description"],data:[{name:"focus",description:"Let's you bind to the button focus method."},{name:"blur",description:"Let's you bind to the button blur method."}]},{title:"Slots",columns:["Name","Description"],data:[{name:"checked",description:"Used to define what to show when the switch is checked."},{name:"unchecked",description:"Used to define what to show when the switch is unchecked."}]}]}class I extends t{constructor(t){super(),e(this,t,F,A,n,{})}}function U(t){let e,n,s;const c=new I({});return{c(){e=i(),n=o("div"),a(c.$$.fragment),this.h()},l(t){C('[data-svelte="svelte-14w2rz9"]',document.head).forEach(l),e=p(t),n=r(t,"DIV",{class:!0});var s=d(n);f(c.$$.fragment,s),s.forEach(l),this.h()},h(){document.title="Switch",v(n,"class","markdown api-container")},m(t,o){m(t,e,o),m(t,n,o),u(c,n,null),s=!0},p:y,i(t){s||(b(c.$$.fragment,t),s=!0)},o(t){k(c.$$.fragment,t),s=!1},d(t){t&&l(e),t&&l(n),S(c)}}}export default class extends t{constructor(t){super(),e(this,t,null,U,n,{})}}
